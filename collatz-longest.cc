#include <iostream>
/*
#include <map>

std::map<int, int> length;
int which_longest;

int find_length(int n) {
  int orig_n = n;
  if (length.count(n)) return length[n];
  int ans = 1;
  while (n > 1) {
    int m = (n % 2) ? (3 * n + 1) : (n / 2);
    ans += 1;
    n = m;
  }
  // length[n] = 1 + find_length(m);
  length[orig_n] = ans;
  return ans;
}

int main() {
  length[1] = 1;
  which_longest = 1;
  for (int n = 2; n < 1000000; ++n) {
    // if (n == 113383 or n == 134379 or n == 138367 or n==151177 or n==159487) continue;
    // std::cout << "Finding for " << n << std::endl;
    int l = find_length(n);
    if (l > length[which_longest]) {
      which_longest = n;
      std::cout << n << " " << l << std::endl;
    }
  }
  return 0;
}


Here are the first 66 record-setters (sequence A006877 on OEIS); I've marked the even ones in bold: *2,* 3, *6,* 7, 9, *18,* 25, 27, *54,* 73, 97, 129, 171, 231, 313, 327, 649, 703, 871, 1161, 2223, 2463, 2919, 3711, 6171, 10971, 13255, 17647, 23529, 26623, 34239, 35655, 52527, 77031, 106239, 142587, 156159, 216367, 230631, 410011, 511935, 626331, 837799, 1117065, 1501353, 1723519, 2298025, 3064033, 3542887, 3732423, 5649499, 6649279, 8400511, 11200681, 14934241, 15733191, *31466382,* 36791535, 63728127, *127456254,* 169941673, 226588897, 268549803, *537099606,* 670617279, *1341234558,*
*/

long long a006877[] = {2, 3, 6, 7, 9, 18, 25, 27, 54, 73, 97, 129, 171, 231, 313, 327, 649, 703, 871, 1161, 2223, 2463, 2919, 3711, 6171, 10971, 13255, 17647, 23529, 26623, 34239, 35655, 52527, 77031, 106239, 142587, 156159, 216367, 230631, 410011, 511935, 626331, 837799, 1117065, 1501353, 1723519, 2298025, 3064033, 3542887, 3732423, 5649499, 6649279, 8400511, 11200681, 14934241, 15733191, 31466382, 36791535, 63728127, 127456254, 169941673, 226588897, 268549803, 537099606, 670617279, 1341234558, 1412987847, 1674652263, 2610744987};

int main() {
  std::cout << sizeof(a006877) / sizeof(a006877[0]) << std::endl;
  for (const auto& n : a006877) {
    if (n % 2 == 0) std::cout << "**" << n << ",** ";
    else std::cout << n << ", ";
  }
}
